resource "helm_release" "release1" {
  name       = "my-release-1"
  chart      = "my-chart-1"
  namespace  = "my-namespace"
}

resource "null_resource" "wait_for_release1" {
  depends_on = [helm_release.release1]
  provisioner "local-exec" {
    command = "echo Release 1 installed"
  }
}

resource "helm_release" "release2" {
  name       = "my-release-2"
  chart      = "my-chart-2"
  namespace  = "my-namespace"
}

resource "null_resource" "wait_for_release2" {
  depends_on = [helm_release.release2, null_resource.wait_for_release1]
  provisioner "local-exec" {
    command = "echo Release 2 installed"
  }
}

resource "kubernetes_persistent_volume" "mobius12-efs" {
  metadata {
    name = "pv-mobius12-efs"
  }
  spec {
    capacity = {
      storage = "1Gi"
    }
    access_modes = ["ReadWriteMany"]
  }
}
resource "kubernetes_persistent_volume_claim" "mobius12-efs" {
  metadata {
    name = "pvc-mobius12-efs"
  }
  spec {
    access_modes = ["ReadWriteMany"]
    resources {
      requests = {
        storage = "1Gi"
      }
    }
    volume_name = "${kubernetes_persistent_volume.mobius12-efs.metadata.0.name}"
  }
}

resource "kubernetes_persistent_volume" "mobius12-diag" {
  metadata {
    name = "pv-mobius12-diagnostics"
  }
  spec {
    capacity = {
      storage = "1Gi"
    }
    access_modes = ["ReadWriteMany"]
  }
}
resource "kubernetes_persistent_volume_claim" "mobius12-diag" {
  metadata {
    name = "pvc-mobius12-diagnostics"
  }
  spec {
    access_modes = ["ReadWriteMany"]
    resources {
      requests = {
        storage = "1Gi"
      }
    }
    volume_name = "${kubernetes_persistent_volume.mobius12-diag.metadata.0.name}"
  }
}